import java.util.*;
import java.io.*;

// 11066 : 파일 합치기
/*
-- 전제 조건
소설가가 각 소설을 각 여러장으로 나누어 쓰는데 다 써서 그것을 합치려고 한다.
이 과정에서 두 개의 파일을 합쳐서 하나의 임시파일을 만들고 , 이 임시파일이나 원래의 파일을 계속 두개씩 합쳐서 소설의 여러장들이 연속이 되도록 파이을 합쳐나가고
최종적으로는 하나의 파일로 합치는 것이 목적이다.
두개의 파일을 합칠때 필요한 비용이 두 파일 크기의 합이라고 가정했을 때
최종적으로 한 개의 파일을 완성하는데 필요한 비용의 총 합을 계산하시오.
만약 c1 , c2 , c3 , c4가 연속적인 4개의 장을 수록하고 있는 파일이라고 가정하고 40 , 30 , 30 , 50이라고 가정하자.
이럴때 c2 , c3 를 먼저 합치면 60 이라는 x1 이 생기고 그 다음에 x1 , c1 을 합치면 100 의 비용이 들고
그 다음에 x2 , c4를 합치면 60 + 100 + 150 = 310 이라는 비용이 필요하다
근데 이것을 c1 , c2 를 합치고 c3 , c4 를 합쳐서 y1 , y2를 만들고 y1 , y2를 합치게 되면 70 + 80 + 150 = 300 이라는 비용으로 해결할 수 있다.
이런식으로 합치는 순서는 그대로 해야하지만 그러니까 c1 , c2 , c3 , c4 이런식으로 갑자기 c1 , c4 가 합치는 것은 불가능 하다 무조건 인접한 것과 합쳐야하는데
이 경우에서 모두 하나의 파일로 합칠 때 최소비용을 계산하는 출력하면 된다.

첫줄에는 테스트 케이스의 개수가 주어지며 각각 2줄씩 총 파일의 개수와 파일들의 크기들이 나와있음
테스트 케이스마다 결과를 출력하면 된다 , 500개나 되니까 이건 무조건 다이나믹 프로그래밍으로 해결해야한다.
-- 틀설계
 */
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
    }
}









